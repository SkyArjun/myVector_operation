#include <iostream>
using namespace std;
class myVector {
private:
    int V[3];

public:
    myVector() {}

//Here we define 3 arrys as vector coeficient V[0]i + V[1]j + V[2]k
    myVector(int x, int y, int z) 
	{
        V[0] = x;
        V[1] = y;
        V[2] = z;
    }

    myVector operator+(const myVector &v) { // Defining + as operator for sum
        myVector eg;
        eg.V[0] = V[0] + v.V[0];
        eg.V[1] = V[1] + v.V[1];
        eg.V[2] = V[2] + v.V[2];
        return eg;
    }

    myVector operator*(const myVector &v) { //Defining * as operator for doing Cross Product
        myVector eg;
        eg.V[0] = V[1] * v.V[2] - V[2] * v.V[1];
        eg.V[1] = V[2] * v.V[0] - V[0] * v.V[2];
        eg.V[2] = V[0] * v.V[1] - V[1] * v.V[0];
        return eg;
    }

    int operator&(const myVector &v) {  //Defining & as operator for Dot Product
        int eg = 0;
        eg += V[0] * v.V[0];
        eg += V[1] * v.V[1];
        eg += V[2] * v.V[2];
        return eg;
    }

    void print() {
        cout << V[0] << "i + (" << V[1] << ")j + (" << V[2] << ")k\n";
    }
};

int main() {
    myVector V1(1, 2, 3); // I choose a rendom vector for doing oprations
    myVector V2(4, 5, 6);
    myVector V3 = V1 + V2; //Addition of 2 vector
    myVector V4 = V1 * V2; // Cross Product 2 vector
    int V5 = V1 & V2; 	   // Dot Product 2 vector

    cout <<"Here are example vectors for doing oprations - "<<endl<< "V1: ";
    V1.print();
    cout << "V2: ";
    V2.print();
    cout << "V1 + V2: ";
    V3.print();
    cout << "V1 x V2: ";
    V4.print();
    cout << "V1 . V2: " << V5 << "\n";

    return 0;
}

